
	Зарезервированые символы
	STX	0x02	Начало пакета
	DLE	0x10	Спецсимвол

	Если надо передать зарезервированый символ X, то он передается как:
	[0x10] [0x20+X]



			Протокол обмена МК и ПК


		Пакет запроса со стороны ПК		Пакет ответа от МК
        	┌───┬───┬────┬────┬────┬────┬───┬───┐   ┌─────┬───┬──────┬───┐
     Чтение │STX│Тип│ADR0│ADR1│ADR2│ADR3│Num│CRC│   │Data0│...│Data31│CRC│
        	└───┴───┴────┴────┴────┴────┴───┴───┘   └─────┴───┴──────┴───┘

	Num	- длина данных, может принимать значения от 0 до 31.

	Внимание!!!	Кол-во байт данных вычисляется как Num+1,
			т.е. Num=0  означает, что передается 1 байт,
			     Num=1  означает, что передается 2 байта,
			     Mun=31 означает, что передается 32 байта.


        Зарезервированные символы в вычислении CRC не участвуют.

        CRC = ~(Тип + ADR0 + ADR1 + ADR2 + ADR3 + Num);


        При ответе зарезервированных символов нет. 

        CRC = ~(Data0 + ... + DataN);



===============================================================================
		Дальше не читать!!!
===============================================================================

			Протокол обмена БРИК с ПК


	 Пакет запроса со стороны ПК			Пакет ответа от БРИК

	        ┌───┬─────┬─────┬───┬─────┬───┬──────┬───┐      ┌─────┬───┐
	 Запись │Тип│AddrL│AddrH│Num│Data0│...│Data31│CRC│      │Ответ│CRC│
	        └───┴─────┴─────┴───┴─────┴───┴──────┴───┘      └─────┴───┘

        	┌───┬─────┬─────┬───┬───┐            ┌─────┬───┬──────┬───┐
     Чтение │Тип│AddrL│AddrH│Num│CRC│            │Data0│...│Data31│CRC│
        	└───┴─────┴─────┴───┴───┘            └─────┴───┴──────┴───┘


	Типы пакетов:
		0xA8 - запись FRAM;
		0xA9 - чтение FRAM;
		0xAA - запись переменных в ОЗУ AT90CAN128;
		0xAB - чтение переменных в ОЗУ AT90CAN128.

	AddrH:AddrL - адрес читаемой/записываемой информации.

	Num	- длина данных, может принимать значения от 0 до 31.

	Внимание!!!	Кол-во байт данных вычисляется как Num+1,
			т.е. Num=0  означает, что передается 1 байт,
			     Num=1  означает, что передается 2 байта,
			     Mun=31 означает, что передается 32 байта.

	Data0..DataN - байты данных, их может быть от 1 до 32 в зависимости
			от значения байта Num.

	CRC	- байт контрольной суммы. Суммируются байты, начиная с Тип'а

	{	//вычисление КС при запросе на чтение
	  ks=0;
	  for(i=0;i<4;i++)ks+=txBuf[i]; //пакет состоит из 4 байт + CRC
	  txBuf[4]=~ks;			//пятый байт CRC
	}

	{	//вычисление КС при запросе на запись
	  n=8;				//допустим, пишем 8 байт данных
	  ks=0;
	  for(i=0;i<(4+n);i++)ks+=txBuf[i]; //пакет состоит из 4 байт + 8 + CRC
	  txBuf[4+n]=~ks;		//байт CRC
	}



		Форматы пакетов ответов на запрос


                                     ┌─────┬───┐
		 Пакет ответа при записи     │Ответ│CRC│
                                     └─────┴───┘

         Ответ - кол-во записанных байт (1 значит записан 1 байт)
         	 Если запись не удалась, Ответ=-1

         CRC - контрольная сумма, равна побитовой инверсии ответа.

         {
           CRC=~Ответ;
         }


                                     ┌─────┬───┬──────┬───┐
         Пакет ответа при чтении     │Data0│...│Data31│CRC│
                                     └─────┴───┴──────┴───┘

	Внимание!!!	Если БРИК не смог прочитать данные из FRAM,
			он пришлет пакет с некорректной CRC, специально,
			чтобы программа на ПК поняла, что данные прочитать
			не удалось.

	Data0..DataN - байты данных, их может быть от 1 до 32 в зависимости
			от значения байта Num в пакете запроса.

         CRC - контрольная сумма.

	{	//вычисление КС при ответе на чтение
	  n=9;				//допустим, в ответе 9 байт данных
	  ks=0;
	  for(i=0;i<n;i++)ks+=txBuf[i]; //пакет состоит из 4 байт + 8 + CRC
	  txBuf[n]=~ks;			//байт CRC
	}



